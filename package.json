{
  "name": "bulk-move",
  "title": "Bulk Move",
  "description": "Move or remove posts in bulk from one category, tag or custom taxonomy to another",
  "version": "1.3.0",
  "homepage": "https://bulkwp.com",
  "license": "GPLv2+",
  "author": {
    "name": "Sudar",
    "email": "sudar@sudarmuthu.com",
    "url": "http://sudarmuthu.com"
  },
  "bugs": {
    "url": "https://github.com/sudar/bulk-move/issues",
    "email": "sudar@sudarmuthu.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sudar/bulk-move.git"
  },
  "private": true,
  "dependencies": {
    "select2": "^4.0.5"
  },
  "devDependencies": {
    "grunt": "^1.0.2",
    "grunt-contrib-clean": "^1.1.0",
    "grunt-contrib-concat": "^1.0.1",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-cssmin": "^2.2.1",
    "grunt-contrib-jshint": "^1.1.0",
    "grunt-contrib-uglify": "^3.3.0",
    "grunt-contrib-watch": "^1.0.0",
    "matchdep": "^2.0.0",
    "time-grunt": "^1.4.0"
  },
  "scripts": {
    "test:unit": "vendor/bin/phpunit",
    "unit": "npm run test:unit -- --printer=Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer",
    "test:unit-c": "npm run test:unit -- --coverage-php code-coverage/unit.cov",
    "test:mock": "npm run test:unit -- --configuration phpunit-wp-mock.xml.dist",
    "mock": "npm run test:mock -- --printer=Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer",
    "test:mock-c": "npm run test:mock -- --coverage-php code-coverage/mock.cov",
    "test": "npm run mock && npm run unit",
    "test:coverage": "rm -rf code-coverage && mkdir code-coverage && npm run test:mock-c && npm run test:unit-c",
    "test:merge-coverage": "vendor/bin/phpcov merge code-coverage/",
    "test:html-coverage": "npm run test:coverage && npm run test:merge-coverage -- --html code-coverage/html/",
    "test:cover-coverage": "npm run test:coverage && npm run test:merge-coverage -- --clover=code-coverage/bulk-move.clover",
    "phpcs": "vendor/bin/phpcs -p *.php include/ --standard=PHPCompatibility --runtime-set testVersion 5.2-",
    "composer:validate": "composer validate",
    "grunt": "grunt vendor && grunt",
    "travis": "npm run composer:validate && npm run phpcs && npm run grunt && npm run test:cover-coverage"
  }
}
