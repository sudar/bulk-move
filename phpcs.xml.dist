<?xml version="1.0"?>
<ruleset name="Bulk Move">
	<description>Bulk Move coding standard</description>

	<file>./</file>

    <!-- Show sniff codes in all reports -->
    <arg value="s"/>

 	<!-- Non code directories -->
	<exclude-pattern>docs/*</exclude-pattern>
	<exclude-pattern>dist/*</exclude-pattern>
	<exclude-pattern>code-coverage/*</exclude-pattern>
 	<exclude-pattern>node_modules/*</exclude-pattern>
 	<exclude-pattern>vendor/*</exclude-pattern>
 	<exclude-pattern>Gruntfile.js</exclude-pattern>

 	<!-- 3rd Party provided libraries -->
	<exclude-pattern>include/libraries/*</exclude-pattern>

 	<!-- Compiled and Vendor-provided assets -->
 	<exclude-pattern>assets/css/vendor/*</exclude-pattern>
 	<exclude-pattern>assets/css/*.min.css</exclude-pattern>

 	<exclude-pattern>assets/js/vendor/*</exclude-pattern>
 	<exclude-pattern>assets/js/*.min.js</exclude-pattern>

	<!-- PHP Compatibility -->
	<config name="testVersion" value="5.2-"/>
	<rule ref="PHPCompatibility">
		<exclude-pattern>*/tests/*</exclude-pattern>
	</rule>

	<!--Code-->
	<rule ref="WordPress-Extra">
		<!-- Exclude suggestion to use esc_html__() instead of _e() -->
		<exclude name="WordPress.XSS.EscapeOutput.UnsafePrintingFunction"/>

		<!-- Allow File names with psr-2 structure -->
		<exclude name="Generic.Files.LowercasedFilename.NotFound"/>
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
		<exclude name="WordPress.Files.FileName.InvalidClassFileName"/>

        <!-- Even arrays that have one item are getting flagged -->
		<exclude name="WordPress.Arrays.ArrayDeclarationSpacing.AssociativeKeyFound"/>
	</rule>

	<!--Docs-->
	<rule ref="WordPress-Docs">
        <!-- Since we are using namespace, no need to include package -->
		<exclude name="Squiz.Commenting.FileComment.MissingPackageTag"/>
		<exclude name="Squiz.Commenting.FileComment.Missing"/>
	</rule>
</ruleset>
